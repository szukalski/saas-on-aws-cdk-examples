{
    "openapi": "3.0.2",
    "info": {
        "title": "UserMgmt",
        "version": "2025-05-21"
    },
    "paths": {
        "/user": {
            "get": {
                "operationId": "ListUser",
                "parameters": [
                    {
                        "name": "nextToken",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "maxResults",
                        "in": "query",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "role",
                        "in": "query",
                        "schema": {
                            "$ref": "#/components/schemas/UserRole"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ListUser 200 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListUserResponseContent"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "ValidationException 400 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationExceptionResponseContent"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "UnauthorizedError 401 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedErrorResponseContent"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "ForbiddenError 403 response"
                    },
                    "404": {
                        "description": "ResourceNotFoundError 404 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundErrorResponseContent"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "InternalServerError 500 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponseContent"
                                }
                            }
                        }
                    }
                },
                "x-amazon-apigateway-integration": {
                    "type": "aws_proxy",
                    "httpMethod": "POST",
                    "uri": "PLACEHOLDER",
                    "credentials": "PLACEHOLDER"
                }
            },
            "post": {
                "operationId": "CreateUser",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateUserRequestContent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "CreateUser 200 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateUserResponseContent"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "ValidationException 400 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationExceptionResponseContent"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "UnauthorizedError 401 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedErrorResponseContent"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "ForbiddenError 403 response"
                    },
                    "404": {
                        "description": "ResourceNotFoundError 404 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundErrorResponseContent"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "InternalServerError 500 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponseContent"
                                }
                            }
                        }
                    }
                },
                "x-amazon-apigateway-integration": {
                    "type": "aws_proxy",
                    "httpMethod": "POST",
                    "uri": "PLACEHOLDER",
                    "credentials": "PLACEHOLDER"
                }
            }
        },
        "/user/{username}": {
            "delete": {
                "operationId": "DeleteUser",
                "parameters": [
                    {
                        "name": "username",
                        "in": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "DeleteUser 200 response"
                    },
                    "400": {
                        "description": "ValidationException 400 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationExceptionResponseContent"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "UnauthorizedError 401 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedErrorResponseContent"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "ForbiddenError 403 response"
                    },
                    "404": {
                        "description": "ResourceNotFoundError 404 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundErrorResponseContent"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "InternalServerError 500 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponseContent"
                                }
                            }
                        }
                    }
                },
                "x-amazon-apigateway-integration": {
                    "type": "aws_proxy",
                    "httpMethod": "POST",
                    "uri": "PLACEHOLDER",
                    "credentials": "PLACEHOLDER"
                }
            },
            "get": {
                "operationId": "ReadUser",
                "parameters": [
                    {
                        "name": "username",
                        "in": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ReadUser 200 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReadUserResponseContent"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "ValidationException 400 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationExceptionResponseContent"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "UnauthorizedError 401 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedErrorResponseContent"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "ForbiddenError 403 response"
                    },
                    "404": {
                        "description": "ResourceNotFoundError 404 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundErrorResponseContent"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "InternalServerError 500 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponseContent"
                                }
                            }
                        }
                    }
                },
                "x-amazon-apigateway-integration": {
                    "type": "aws_proxy",
                    "httpMethod": "POST",
                    "uri": "PLACEHOLDER",
                    "credentials": "PLACEHOLDER"
                }
            },
            "put": {
                "operationId": "UpdateUser",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateUserRequestContent"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "username",
                        "in": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "UpdateUser 200 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateUserResponseContent"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "ValidationException 400 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationExceptionResponseContent"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "UnauthorizedError 401 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedErrorResponseContent"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "ForbiddenError 403 response"
                    },
                    "404": {
                        "description": "ResourceNotFoundError 404 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceNotFoundErrorResponseContent"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "InternalServerError 500 response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponseContent"
                                }
                            }
                        }
                    }
                },
                "x-amazon-apigateway-integration": {
                    "type": "aws_proxy",
                    "httpMethod": "POST",
                    "uri": "PLACEHOLDER",
                    "credentials": "PLACEHOLDER"
                }
            }
        }
    },
    "components": {
        "schemas": {
            "CreateUserRequestContent": {
                "type": "object",
                "properties": {
                    "username": {
                        "type": "string"
                    },
                    "role": {
                        "$ref": "#/components/schemas/UserRole"
                    },
                    "password": {
                        "type": "string"
                    }
                }
            },
            "CreateUserResponseContent": {
                "type": "object",
                "properties": {
                    "username": {
                        "type": "string"
                    },
                    "role": {
                        "$ref": "#/components/schemas/UserRole"
                    }
                },
                "required": [
                    "role",
                    "username"
                ]
            },
            "InternalServerErrorResponseContent": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string"
                    }
                },
                "required": [
                    "message"
                ]
            },
            "ListUserResponseContent": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UserSchema"
                        }
                    },
                    "nextToken": {
                        "type": "string"
                    }
                }
            },
            "ReadUserResponseContent": {
                "type": "object",
                "properties": {
                    "username": {
                        "type": "string"
                    },
                    "role": {
                        "$ref": "#/components/schemas/UserRole"
                    },
                    "tenant_id": {
                        "type": "string"
                    }
                },
                "required": [
                    "role",
                    "username"
                ]
            },
            "ResourceNotFoundErrorResponseContent": {
                "type": "object",
                "description": "An error indicating a resource could not be found",
                "properties": {
                    "message": {
                        "type": "string"
                    }
                },
                "required": [
                    "message"
                ]
            },
            "UnauthorizedErrorResponseContent": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string"
                    }
                }
            },
            "UpdateUserRequestContent": {
                "type": "object",
                "properties": {
                    "role": {
                        "$ref": "#/components/schemas/UserRole"
                    }
                }
            },
            "UpdateUserResponseContent": {
                "type": "object",
                "properties": {
                    "username": {
                        "type": "string"
                    },
                    "role": {
                        "$ref": "#/components/schemas/UserRole"
                    }
                },
                "required": [
                    "role",
                    "username"
                ]
            },
            "UserRole": {
                "type": "string",
                "enum": [
                    "admin",
                    "user"
                ]
            },
            "UserSchema": {
                "type": "object",
                "properties": {
                    "username": {
                        "type": "string"
                    },
                    "role": {
                        "$ref": "#/components/schemas/UserRole"
                    },
                    "tenant_id": {
                        "type": "string"
                    }
                },
                "required": [
                    "role",
                    "username"
                ]
            },
            "ValidationExceptionField": {
                "type": "object",
                "description": "Describes one specific validation failure for an input member.",
                "properties": {
                    "path": {
                        "type": "string",
                        "description": "A JSONPointer expression to the structure member whose value failed to satisfy the modeled constraints."
                    },
                    "message": {
                        "type": "string",
                        "description": "A detailed description of the validation failure."
                    }
                },
                "required": [
                    "message",
                    "path"
                ]
            },
            "ValidationExceptionResponseContent": {
                "type": "object",
                "description": "A standard error for input validation failures.\nThis should be thrown by services when a member of the input structure\nfalls outside of the modeled or documented constraints.",
                "properties": {
                    "message": {
                        "type": "string",
                        "description": "A summary of the validation failure."
                    },
                    "fieldList": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ValidationExceptionField"
                        },
                        "description": "A list of specific failures encountered while validating the input.\nA member can appear in this list more than once if it failed to satisfy multiple constraints."
                    }
                },
                "required": [
                    "message"
                ]
            }
        },
        "securitySchemes": {
            "authy": {
                "type": "apiKey",
                "description": "API key authentication via the 'Authorization' header",
                "name": "Authorization",
                "in": "header",
                "x-amazon-apigateway-authorizer": {
                    "type": "token",
                    "authorizerUri": "PLACEHOLDER",
                    "identitySource": "method.request.header.Authorization"
                },
                "x-amazon-apigateway-authtype": "custom"
            }
        }
    },
    "security": [
        {
            "authy": []
        }
    ]
}
